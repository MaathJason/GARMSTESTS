name: garms.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [20.x] # Adicione aqui as versões do Node.js que você deseja testar

    steps:
    - uses: actions/checkout@v3

    - name: Instalando Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    - name: Criando .env para as credenciais
      run: |
        echo "DB_HOST=${{ secrets.DB_HOST }}" > .env
        echo "DB_USER=${{ secrets.DB_USER }}" >> .env
        echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
        echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env

    - name: Build do Front-End
      run: |
        npm i
        npm update
        cd front-end
        npm i
        npm run build
        cd ..

    - name: Instalando dependências do Back-end
      run: |
        cd back-end
        npm i
        npm install cors

    - name: Resetando front e back
      run: |
        cd ../front-end
        pm2 reload garms || pm2 start npm --name garms -- npm run dev
        cd ../back-end
        pm2 reload backend || pm2 start --name backend -- npm run dev
        cd ..
        pm2 save

    # Descomente e configure se necessário
    # - name: Restart nginx
    #   run: |
    #     echo "${{ secrets.USER_PASS }}" | sudo -S service nginx restart
    #   env:
    #     USER_PASS: ${{ secrets.USER_PASS }}
